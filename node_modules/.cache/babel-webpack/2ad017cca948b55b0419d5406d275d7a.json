{"ast":null,"code":"import { EventEmitter, Component, ChangeDetectionStrategy, forwardRef, ChangeDetectorRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@ionic/angular';\n\nfunction IonRatingComponent_ion_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ion-button\", 1);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function IonRatingComponent_ion_button_0_Template_ion_button_mouseenter_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3);\n      const i_r1 = restoredCtx.$implicit;\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onMouseEnter(i_r1);\n    })(\"click\", function IonRatingComponent_ion_button_0_Template_ion_button_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3);\n      const i_r1 = restoredCtx.$implicit;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onClick(i_r1);\n    });\n    ɵngcc0.ɵɵelement(1, \"ion-icon\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"filled\", i_r1 <= ctx_r0.hoverRate || !ctx_r0.hoverRate && i_r1 <= ctx_r0.rate)(\"readonly\", ctx_r0.readonly);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabled || ctx_r0.readonly);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r0.size);\n  }\n}\n\nconst _c0 = function () {\n  return [1, 2, 3, 4, 5];\n};\n\nlet IonRatingComponent = /*#__PURE__*/(() => {\n  class IonRatingComponent {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n      this.cd = cd;\n      this.hover = new EventEmitter();\n      this.leave = new EventEmitter();\n      this.rateChange = new EventEmitter();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes.rate) {\n        this.update(this.rate);\n      }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @param {?=} internalChange\n     * @return {?}\n     */\n\n\n    update(value, internalChange = true) {\n      if (!(this.readonly || this.disabled || this.rate === value)) {\n        this.rate = value;\n        this.rateChange.emit(this.rate);\n      }\n\n      if (internalChange) {\n        if (this.onChange) {\n          this.onChange(this.rate);\n        }\n\n        if (this.onTouched) {\n          this.onTouched();\n        }\n      }\n    }\n    /**\n     * @param {?} rate\n     * @return {?}\n     */\n\n\n    onClick(rate) {\n      this.update(this.resettable && this.rate === rate ? 0 : rate);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    onMouseEnter(value) {\n      if (!(this.disabled || this.readonly)) {\n        this.hoverRate = value;\n      }\n\n      this.hover.emit(value);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    onMouseLeave() {\n      this.leave.emit(this.hoverRate);\n      this.hoverRate = 0;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    onBlur() {\n      if (this.onTouched) {\n        this.onTouched();\n      }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    writeValue(value) {\n      this.update(value, false);\n      this.cd.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n\n  }\n\n  IonRatingComponent.ɵfac = function IonRatingComponent_Factory(t) {\n    return new (t || IonRatingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  IonRatingComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: IonRatingComponent,\n    selectors: [[\"ion-rating\"]],\n    hostBindings: function IonRatingComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mouseleave\", function IonRatingComponent_mouseleave_HostBindingHandler() {\n          return ctx.onMouseLeave();\n        })(\"blur\", function IonRatingComponent_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n    },\n    inputs: {\n      rate: \"rate\",\n      readonly: \"readonly\",\n      resettable: \"resettable\",\n      size: \"size\"\n    },\n    outputs: {\n      hover: \"hover\",\n      leave: \"leave\",\n      rateChange: \"rateChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(\n      /**\n      * @return {?}\n      */\n      () => IonRatingComponent),\n      multi: true\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 2,\n    consts: [[\"type\", \"button\", \"fill\", \"clear\", 3, \"disabled\", \"filled\", \"readonly\", \"mouseenter\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"fill\", \"clear\", 3, \"disabled\", \"mouseenter\", \"click\"], [\"slot\", \"icon-only\", \"name\", \"star\", 3, \"size\"]],\n    template: function IonRatingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, IonRatingComponent_ion_button_0_Template, 2, 6, \"ion-button\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpureFunction0(1, _c0));\n      }\n    },\n    directives: [ɵngcc1.NgForOf, ɵngcc2.IonButton, ɵngcc2.IonIcon],\n    styles: [\"[_nghost-%COMP%]{--star-color:gray;--star-color-filled:orange;display:inline-block}ion-button[_ngcontent-%COMP%]{--padding-start:0;--padding-end:0;--color:var(--star-color);--color-focused:var(--star-color);--color-activated:var(--star-color)}ion-button.filled[_ngcontent-%COMP%]{--color:var(--star-color-filled);--color-focused:var(--star-color-filled);--color-activated:var(--star-color-filled)}ion-button.readonly[_ngcontent-%COMP%]{--opacity:1}\"],\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return IonRatingComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet IonicRatingModule = /*#__PURE__*/(() => {\n  class IonicRatingModule {}\n\n  IonicRatingModule.ɵfac = function IonicRatingModule_Factory(t) {\n    return new (t || IonicRatingModule)();\n  };\n\n  IonicRatingModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: IonicRatingModule\n  });\n  IonicRatingModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, IonicModule]]\n  });\n  return IonicRatingModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IonicRatingModule, {\n    declarations: function () {\n      return [IonRatingComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, IonicModule];\n    },\n    exports: function () {\n      return [IonRatingComponent];\n    }\n  });\n})();\n\nexport { IonRatingComponent, IonicRatingModule }; //# sourceMappingURL=ionic-rating.js.map","map":null,"metadata":{},"sourceType":"module"}